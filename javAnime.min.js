class javAnime{constructor(e,n){return Object.assign({scenes:[],debugging:!1,preLogic:{},postLogic:{},hotPotato:{},sceneInstance:0,animeProcessing:!1,actionProcessing:!1,preLogicProcessing:!1,postLogicProcessing:!1,processorState:null,start:function(e){!0!==(e=e||this).processorState?!1!==e.processorState?(e.processorState=!0,e.sceneProcessor(e)):console.error("Start error: Commanded to start, but this object is shutting down."):console.error("Start error: Commanded to start, but this object is already running.")},stop:function(e){(e=e||this).processorState=!1,e.debugging&&console.log("Sending signal to scene processes to shut down.")},status:function(e){let n={scene:(e=e||this).scenes[e.sceneInstance].hasOwnProperty("desc")?e.scenes[e.sceneInstance].desc:e.scenes[e.sceneInstance],animeProcessing:e.animeProcessing,actionProcessing:e.actionProcessing,preLogicProcessing:e.preLogicProcessing,postLogicProcessing:e.postLogicProcessing,state:null===e.processorState?"ready":!0===e.processorState?"active":!1===e.processorState?"stopping":"unknown"};return e.debugging&&console.log("Status:",JSON.stringify(n)),n},sceneProcessor:function(e){if(!1===(e=e||this).processorState)return e.debugging&&console.log("sceneProcessor has been commanded to stop...stopping execution."),void(e.processorState=null);if(e.sceneInstance!==e.scenes.length){if(!0!==e.animeProcessing&&!0!==e.actionProcessing&&!0!==e.preLogicProcessing&&!0!==e.postLogicProcessing)return e.debugging&&console.log("Processing scene: ",e.scenes[e.sceneInstance]),!1===e.preLogicProcessing&&e.scenes[e.sceneInstance].hasOwnProperty("preLogic")?void e.processPreLogic(e):!1===e.animeProcessing&&e.scenes[e.sceneInstance].hasOwnProperty("anime")?void e.processAnime(e):!1===e.actionProcessing&&e.scenes[e.sceneInstance].hasOwnProperty("action")?void e.processAction(e):!1===e.postLogicProcessing&&e.scenes[e.sceneInstance].hasOwnProperty("postLogic")?void e.processPostLogic(e):void e.processSceneCompletion(e);e.debugging&&console.log("sceneProcessor was invoked, but animeProcessing, actionProcessing, preLogicProcessing, or postLogicProcessing is still processing. ["+e.animeProcessing+"|"+e.actionProcessing+"|"+e.preLogicProcessing+"|"+e.postLogicProcessing+"]")}else e.debugging&&console.log("All scenes have been iterated through.")},processPreLogic:function(e){e.debugging&&console.log("Invoking preLogic: ",e.scenes[e.sceneInstance].preLogic),e.preLogicProcessing=!0,"function"==typeof e.scenes[e.sceneInstance].preLogic?e.scenes[e.sceneInstance].preLogic(function(){e.logicEnd(e,"preLogic")},e):console.error("preLogic function not found: ",e.scenes[e.sceneInstance].preLogic)},processAnime:function(e){if(e.debugging&&console.log("Invoking anime: ",e.scenes[e.sceneInstance].anime),e.scenes[e.sceneInstance].hasOwnProperty("infiniteAnimation")&&!0===e.scenes[e.sceneInstance].infiniteAnimation){if(e.animeProcessing=null,e.scenes[e.sceneInstance].hasOwnProperty("selector"))document.querySelector(e.scenes[e.sceneInstance].selector).setAttribute("anime",e.scenes[e.sceneInstance].anime);else{if(!e.scenes[e.sceneInstance].hasOwnProperty("selectors"))return void console.error("Missing (selector) or (selectors) in scene to apply animation to");{let n=document.querySelectorAll(":scope "+e.scenes[e.sceneInstance].selectors);e.debugging&&console.log("Animation will be applied to "+n.length+" object"+(1===n.length?"":"s")+"."),n.forEach(function(n){n.setAttribute("anime",e.scenes[e.sceneInstance].anime)})}}e.sceneProcessor(e)}else{if(e.animeProcessing=!0,e.scenes[e.sceneInstance].hasOwnProperty("selector"))return e.debugging&&console.log("Setting animationend listener on selector ["+e.scenes[e.sceneInstance].selector+"]: ",document.querySelector(e.scenes[e.sceneInstance].selector)),document.querySelector(e.scenes[e.sceneInstance].selector).addEventListener("animationend",function n(){e.animeEnd(this,e,n)},!1),void document.querySelector(e.scenes[e.sceneInstance].selector).setAttribute("anime",e.scenes[e.sceneInstance].anime);if(e.scenes[e.sceneInstance].hasOwnProperty("selectors")){let n=document.querySelectorAll(":scope "+e.scenes[e.sceneInstance].selectors);return e.debugging&&console.log("Setting animationend listener on selectors ["+e.scenes[e.sceneInstance].selectors+"]",document.querySelector(e.scenes[e.sceneInstance].selectors)),e.debugging&&console.log("Animation will be applied to "+n.length+" object"+(1===n.length?"":"s")+"."),e.hotPotato.multiSelectors=n.length,void n.forEach(function(n){n.addEventListener("animationend",function n(){e.animeEnd(this,e,n,!0)},!1),n.setAttribute("anime",e.scenes[e.sceneInstance].anime)})}console.error("Missing (selector) or (selectors) in scene to apply animation to")}},processAction:function(e){if(e.debugging&&console.log("Invoking action: ",e.scenes[e.sceneInstance].action),e.actionProcessing=!0,e.scenes[e.sceneInstance].hasOwnProperty("selector"))return e.debugging&&console.log("Setting transitionend listener on selector ["+e.scenes[e.sceneInstance].selector+"]: ",document.querySelector(e.scenes[e.sceneInstance].selector)),document.querySelector(e.scenes[e.sceneInstance].selector).addEventListener("transitionend",function n(){e.actionEnd(this,e,n)},!1),void document.querySelector(e.scenes[e.sceneInstance].selector).setAttribute("action",e.scenes[e.sceneInstance].action);if(e.scenes[e.sceneInstance].hasOwnProperty("selectors")){let n=document.querySelectorAll(":scope "+e.scenes[e.sceneInstance].selectors);return e.debugging&&console.log("Setting transitionend listener on selectors ["+e.scenes[e.sceneInstance].selectors+"]",document.querySelector(e.scenes[e.sceneInstance].selectors)),e.debugging&&console.log("Action will be applied to "+n.length+" object"+(1===n.length?"":"s")+"."),e.hotPotato.multiSelectors=n.length,void n.forEach(function(n){n.addEventListener("transitionend",function n(){e.actionEnd(this,e,n,!0)},!1),n.setAttribute("action",e.scenes[e.sceneInstance].action)})}console.error("Missing (selector) or (selectors) in scene to apply action to")},processPostLogic:function(e){e.debugging&&console.log("Invoking postLogic: ",e.scenes[e.sceneInstance].postLogic),e.postLogicProcessing=!0,"function"==typeof e.scenes[e.sceneInstance].postLogic?e.scenes[e.sceneInstance].postLogic(function(){e.logicEnd(e,"postLogic")},e):console.error("postLogic function not found: ",e.scenes[e.sceneInstance].postLogic)},processSceneCompletion:function(e){e.debugging&&console.log("Scene Complete"),++e.sceneInstance,e.animeProcessing=!1,e.actionProcessing=!1,e.preLogicProcessing=!1,e.postLogicProcessing=!1,e.sceneProcessor(e)},logicEnd:function(e,n){e.debugging&&console.log("logic is complete ["+n+"]."),e[n+"Processing"]=null,e.sceneProcessor(e)},animeEnd:function(e,n,s,o){let t=!1;if(o){if(n.debugging&&console.log("Tracking multiple objects for completion."),!n.hotPotato.hasOwnProperty("multiSelectors"))return void console.error("Commanded to track multiple objects, but no count was stored.");if(--n.hotPotato.multiSelectors,e.removeEventListener("animationend",s,!1),t=!0,n.hotPotato.multiSelectors>0)return void(n.debugging&&console.log("Waiting for "+n.hotPotato.multiSelectors+"object"+(1===n.hotPotato.multiSelectors?"":"s")+" to complete."));delete n.hotPotato.multiSelectors}n.debugging&&console.log("Animation Ended"),n.animeProcessing=null,!1===t&&e.removeEventListener("animationend",s,!1),null!==n.processorState&&!1!==n.processorState?n.sceneProcessor(n):n.debugging&&console.log("sceneProcessor has been shutdown, will not invoke again.")},actionEnd:function(e,n,s,o){let t=!1;if(o){if(n.debugging&&console.log("Tracking multiple objects for completion."),!n.hotPotato.hasOwnProperty("multiSelectors"))return void console.error("Commanded to track multiple objects, but no count was stored.");if(--n.hotPotato.multiSelectors,e.removeEventListener("transitionend",s,!1),t=!0,n.hotPotato.multiSelectors>0)return void(n.debugging&&console.log("Waiting for "+n.hotPotato.multiSelectors+"object"+(1===n.hotPotato.multiSelectors?"":"s")+" to complete."));delete n.hotPotato.multiSelectors}n.debugging&&console.log("Action Ended"),n.actionProcessing=null,!1===t&&e.removeEventListener("transitionend",s,!1),null!==n.processorState&&!1!==n.processorState?n.sceneProcessor(n):n.debugging&&console.log("sceneProcessor has been shutdown, will not invoke again.")}},e)}}